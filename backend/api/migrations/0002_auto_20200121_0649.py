# Generated by Django 3.0.2 on 2020-01-21 05:08

from django.db import migrations
from openpyxl import load_workbook
import datetime
from django.utils import timezone
import os
from api_config import settings
import glob
from django.db.utils import IntegrityError
from django.db import transaction


def push_initial_data(apps, schema_editor):
    City = apps.get_model('api', 'City')
    Temperature = apps.get_model('api', 'Temperature')
    Pressure = apps.get_model('api', 'Pressure')
    Humidity = apps.get_model('api', 'Humidity')
    path = f'{settings.BASE_DIR}/api/test_data/'

    for filename in glob.glob(os.path.join(path, '*.xlsx')):
        city_name = os.path.splitext(os.path.basename(filename))[0]
        city = City.objects.create(name=city_name)
        city.save()

        wb = load_workbook(filename)
        ws = wb.active
        for row in ws.iter_rows(min_row=8, values_only=True):
            initial_date = datetime.datetime.strptime(row[0], "%d.%m.%Y %H:%M")
            current_tz = timezone.get_current_timezone()
            correct_date = current_tz.localize(initial_date)
            try:
                with transaction.atomic():
                    temperature = Temperature.objects.create(
                        city=city,
                        date_of_report=correct_date,
                        temperature=row[1],
                    )
                    temperature.save()

                    pressure = Pressure.objects.create(
                        city=city,
                        date_of_report=correct_date,
                        pressure=row[3],
                    )
                    pressure.save()

                    humidity = Humidity.objects.create(
                        city=city,
                        date_of_report=correct_date,
                        humidity=row[4],
                    )

                    humidity.save()
            except IntegrityError:
                continue
        wb.close()


class Migration(migrations.Migration):
    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(push_initial_data)
    ]
